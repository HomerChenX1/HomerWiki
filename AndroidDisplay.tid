created: 20190627012449465
modified: 20190926101412857
tags: AndroidUI
title: AndroidDisplay
type: text/vnd.tiddlywiki

|! | !dpi | !density | !png(unit:px) | !png(Actionbar) | !png(menu) | !Notification |
|! ldpi| 120 | 0.75 | 36*36 |  | | |
|! mdpi| 160 | 1 | 48*48 | 24 × 24 area in 32 × 32 | 16 × 16 | 22 × 22 area in 24 × 24 |
|! hdpi | 240 | 1.5 | 72*72 | 36 × 36 area in 48 × 48 | 24 × 24 | 33 × 33 area in 36 × 36 |
|! xdpi | 320 | 2 | 96*96 | 48 × 48 area in 64 × 64 | 32 × 32 | 44 × 44 area in 48 × 48 |
|! xxdpi | 480 | 3 | 144*144 | 72 × 72 area in 96 × 96 | 48 × 48 | 66 × 66 area in 72 × 72 |
|! xxxdpi | 640 | 4 | 192*192 | 96 × 96 area in 128 × 128 | 64 × 64 | 88 × 88 area in 96 × 96|
|! play |  |  | 512*512 | | ||
|! Vector |  |  | 200dp*200dp | | ||

|! 螢幕尺寸 | !inches |
|! small | 3.3~3.5 |
|! normal | 3.5~5|
|! large | 5~7.5 |
|! xlarge | 7.5 |
|! xxlarge | 7.5 |
|! xxxlarge | 10 |
|! large | 15 |

!! ''Layout rules:''
!!! ''圖形'' : `dp`
* 不管DPI的大小如何，1dp永遠為1/160英吋(0.00625英吋), DP是最小的固定長度單位，非常適合對版面進行細微的調整
* drawable-ldpi, drawable-mdpi, drawable-hdpi, drawable-xhdpi
* mipmap-ldpi, mipmap-mdpi, mipmap-hdpi, mipmap-xhdpi
* 在 `C:\Android\android-sdk\platforms\android-22\data\res\drawable-hdpi` 資料夾之下, 
會有許多預設圖示提供你使用。


!!! ''文字'': `sp`
* sp常用來當作文字的長度，基本上SP就是DP(在字型大小100%的時候)
** sp可以再隨著系統的字型大小設定做倍率的縮放。在Android系統中，如果要讓文字大小可以被使用者在系統設定中的字型大小影響，那就使用sp單位指定文字大小吧！
* 如果想固定字體大小的話，也可以使用dp單位。需指明 MONO 字形
* pt通常用來當作一個文字的長度，不管DPI的大小如何，1pt永遠為1/72英吋(0.01389英吋)

!!! ''Layout'': `layout-large-xhdpi-land`
* layout-small, layout-normal, layout-large, layout-xlarge
* layout-swNdp 
** layout-sw600dp」，就是螢幕的最小邊長要至少為600dp才套用這目錄底下的layout
* layout-land, layout-port

!!! ''Dimens'':  `res/values-large-xhdpi`
* res/values/dimens.xml,
** res/values-large-hdpi/dimens.xml 
** res/values-large-xhdpi/dimens.xml 
** res/values-large-xxhdpi/dimens.xml 
** res/values-mdpi/dimens.xml 
** res/values-hdpi/dimens.xml


!! 參考資料:
* [[Willy's Fish教學筆記』Android Drawbale 螢幕適配介紹，什麼是 hdpi、mdpi、xhdpi、xxhdpi ?|http://willy2016.pixnet.net/blog/post/166506393-willy%27s-fish%E6%95%99%E5%AD%B8%E7%AD%86%E8%A8%98%E3%80%8F%08android-drawbale-%E8%9E%A2%E5%B9%95%E9%81%A9%E9%85%8D%E4%BB%8B]]
* [[Android常見解析度（mdpi、hdpi 、xhdpi、xxhdpi ）尺寸單位轉換和螢幕適配相關|https://www.itread01.com/content/1546596934.html]]
* [[Android 常見分辨率（mdpi、hdpi、xhdpi、xxhdpi ）及屏幕適配注意事項|http://lang.idv.tw/doku.php/mobile/android/%E9%96%8B%E7%99%BC%E7%AD%86%E8%A8%98/android_%E5%B8%B8%E8%A6%8B%E5%88%86%E8%BE%A8%E7%8E%87_mdpi_hdpi_xhdpi_xxhdpi]]
* [[安卓之各分辨率定義的圖片規格|http://www.nljb.net/default/Android%E4%B9%8B%E5%90%84%E5%88%86%E8%BE%A8%E7%8E%87%E5%AE%9A%E4%B9%89%E7%9A%84%E5%9B%BE%E7%89%87%E8%A7%84%E6%A0%BC/]]
* [[icon handbook|https://iconhandbook.co.uk/reference/chart/android/]]
* [[Android App支援多種不同螢幕規格的方式|https://magiclen.org/android-screen/]]
* [[多分辨率適配常用目錄|https://wiki.jikexueyuan.com/project/android-actual-combat-skills/multi-resolution-adapting-common-directory.html]]
* [[Android--獲取View的寬高的幾種方法|https://blog.csdn.net/HardWorkingAnt/article/details/77278811]]

使用9-patch PNG圖片

```java
//取得螢幕寬高密度
DisplayMetrics dm = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(dm);
Logger.e("screenWidth:" + dm.widthPixels + "  "
        +"screenHeight:" + dm.heightPixels + "\n"
        + "xdp(寬):" + dm.xdpi + "  "
        + "ydp(高):" + dm.ydpi + "\n"
        + "density:" + dm.density + "  "
        + "scaledDensity:" + dm.scaledDensity + "  "
        + "dpi:" + dm.densityDpi);
```

!! [[Get height of a view in onCreate() method|https://blog.csdn.net/hardworkingant/article/details/77408329]]
```java
final LinearLayout layout = (LinearLayout) findViewById(R.id.layout);
final ViewTreeObserver observer= layout.getViewTreeObserver();
observer.addOnGlobalLayoutListener(
    new ViewTreeObserver.OnGlobalLayoutListener() {
        @Override
            public void onGlobalLayout() {
                Log.d("Log", "Height: " + layout.getHeight());
            }
        });
```